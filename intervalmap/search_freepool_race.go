// Code generated by "../gtl/generate.py --output=search_freepool_race.go --prefix=searcher --PREFIX=searcher -DELEM=*searcher --package=intervalmap ../gtl/randomized_freepool_race.go.tpl". DO NOT EDIT.

//go:build race
// +build race

package intervalmap

import "sync/atomic"

type searcherFreePool struct {
	new func() *searcher
	len int64
}

func NewsearcherFreePool(new func() *searcher, maxSize int) *searcherFreePool {
	return &searcherFreePool{new: new}
}

func (p *searcherFreePool) Put(x *searcher) {
	atomic.AddInt64(&p.len, -1)
}

func (p *searcherFreePool) Get() *searcher {
	atomic.AddInt64(&p.len, 1)
	return p.new()
}

func (p *searcherFreePool) ApproxLen() int { return int(atomic.LoadInt64(&p.len)) }
